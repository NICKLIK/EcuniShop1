// <auto-generated />
using System;
using EcuniShop1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcuniShop1.Migrations
{
    [DbContext(typeof(EcuniShop1Context))]
    partial class EcuniShop1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcuniShop1.Models.Catalogo", b =>
                {
                    b.Property<int>("IdCatalogo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCatalogo"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiltroBusqueda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("ListaProductoIdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdCatalogo");

                    b.HasIndex("ListaProductoIdProducto");

                    b.ToTable("Catalogo");
                });

            modelBuilder.Entity("EcuniShop1.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<float>("Descuento")
                        .HasColumnType("real");

                    b.Property<int?>("EspecificacionEstudianteIdEstudiante")
                        .HasColumnType("int");

                    b.Property<int?>("EspecificacionProductoIdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstudiante")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UbicacionIdUbicacion")
                        .HasColumnType("int");

                    b.HasKey("IdCompra");

                    b.HasIndex("EspecificacionEstudianteIdEstudiante");

                    b.HasIndex("EspecificacionProductoIdProducto");

                    b.HasIndex("UbicacionIdUbicacion");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("EcuniShop1.Models.Estudiante", b =>
                {
                    b.Property<int>("IdEstudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstudiante"));

                    b.Property<string>("ApellidoEstudiante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<string>("Membresia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEstudiante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UbicacionEstudianteIdUbicacion")
                        .HasColumnType("int");

                    b.HasKey("IdEstudiante");

                    b.HasIndex("UbicacionEstudianteIdUbicacion");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("EcuniShop1.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.HasKey("IdProducto");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("EcuniShop1.Models.Ubicacion", b =>
                {
                    b.Property<int>("IdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUbicacion"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("DescuentoUbicacion")
                        .HasColumnType("real");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUbicacion");

                    b.ToTable("Ubicacion");
                });

            modelBuilder.Entity("EcuniShop1.Models.Catalogo", b =>
                {
                    b.HasOne("EcuniShop1.Models.Producto", "ListaProducto")
                        .WithMany()
                        .HasForeignKey("ListaProductoIdProducto");

                    b.Navigation("ListaProducto");
                });

            modelBuilder.Entity("EcuniShop1.Models.Compra", b =>
                {
                    b.HasOne("EcuniShop1.Models.Estudiante", "EspecificacionEstudiante")
                        .WithMany()
                        .HasForeignKey("EspecificacionEstudianteIdEstudiante");

                    b.HasOne("EcuniShop1.Models.Producto", "EspecificacionProducto")
                        .WithMany()
                        .HasForeignKey("EspecificacionProductoIdProducto");

                    b.HasOne("EcuniShop1.Models.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionIdUbicacion");

                    b.Navigation("EspecificacionEstudiante");

                    b.Navigation("EspecificacionProducto");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("EcuniShop1.Models.Estudiante", b =>
                {
                    b.HasOne("EcuniShop1.Models.Ubicacion", "UbicacionEstudiante")
                        .WithMany()
                        .HasForeignKey("UbicacionEstudianteIdUbicacion");

                    b.Navigation("UbicacionEstudiante");
                });
#pragma warning restore 612, 618
        }
    }
}
